Домашнее задание

Теория (вопросы)

1. Что такое Maven?
Maven — инструмент для управления и сборки проектов

2. Что такое Архетип? Какие архетипы вы знаете? Для чего они используются?
Архетип — это некая стандартная компоновка файлов и каталогов в проектах различного рода (веб, swing-проекты и прочие).
maven-archetype-quickstart - архетип, который содержит пример проекта Maven.

3. С помощью какой команды можно создать Maven-проект?
mvn archetype:generate.
Проект домашней работы создан с помощью команды:
mvn archetype:generate -DgroupId=ru.itgirl -DartifactId=first-maven-project -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4 -DinteractiveMode=false

4. Что такое файл pom.xml? Для чего он нужен?
pom.xml - файл описания проекта, на основе которого осуществляются все операции Maven. Он написан на языке POM, входящим в семейство XML.
Файл POM содержит информацию о проекте и различных деталях конфигурации, которые используются Maven для создания проекта. 

5. Опишите структуру файла pom.xml. Какие там есть теги? Для чего они используются?
- 'project' - базовый тег, который хранит всю информацию о проекте.
- 'modelVersion' - содержит информацию о версии POM.
- 'groupId' - указание группы проекта
- 'artifactId' - указание названия данного артефакта
- 'version' - текущая версия сборки. 
После номера версии идёт суффикс '-SNAPSHOT'. Это означает, что проект находится в стадии разработки. 
- 'url' — ссылка на сайт. 
- Блок 'properties':
    - 'project.build.sourceEncoding' - кодировка проекта
    - 'maven.compiler.source' - версия Java, на которой будет написан код проекта
    - 'maven.compiler.target' - версия Java, в которую надо будет скомпилировать проект
- Блок 'depenencies' :
В нём описываются все используемые в проекте зависимости. Каждую необходимо выделить тегом 'dependency' и указать уникальные идентификационные данные: 'groupId', 'artifactId' и 'version'. 
Maven сам подгрузит транзитивные зависимости. Кроме того, с помощью тега 'scope' можно указать этапы, на которых будет использован артефакт. 
- Блок 'build' :
Данный тег не является обязательной, в данном 'pom.xml' в неё включены плагины из архетипа, однако можно обойтись и без них.

6. Расскажите про жизненный цикл Maven-проекта. Какие фазы вы знаете?
Maven выполняет сборку последовательными фазами. Эти фазы образуют жизненный цикл проекта:

1. 'validate'— Проверка. Фреймворк проверяет, корректен ли проект и предоставлена ли вся необходимая для сборки информация.
2.  'compile'— Компиляция. Maven компилирует исходники проекта.
3.  'test'— Тест. Проверка скомпилированных файлов. В нашем случае будет использована библиотека JUnit.
4. 'package'— Сборка проекта. По умолчанию осуществляется в формате JAR. Этот параметр можно изменить, добавив в 'project' тег 'packaging'.
5.  'integration-test' — Интеграционное тестирование. Maven обрабатывает и при необходимости распаковывает пакет в среду, где будут выполняться интеграционные тесты.
6. 'verify'— Верификация. Артефакт проверяется на соответствие критериям качества.
7. 'install'— Инсталляция. Артефакт попадает в локальный репозиторий. Теперь его можно использовать в качестве зависимости в другом проекте.
8.  'deploy'— Размещение проекта в удалённом репозитории, — финальная стадия работы.

7. Как скомпилировать Maven-проект?
mvn package

8. Как называется папка, в которой окажется jar файл после компиляции?
target

9. Как запустить скомпилированный jar файл?

java -cp target/имя_файла.jar имя_пакетов.имя_метода_с_main_функцией
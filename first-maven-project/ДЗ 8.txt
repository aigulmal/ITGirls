Домашнее задание

Теория (вопросы)

1. Что такое LinkedList и что хранится в каждом из его элементов?
LinkedList представляет из себя двусвязный список. 
У каждого элемента помимо того значения, которое он хранит, 
имеется ссылка на предыдущий и следующий элемент.

2. Опишите алгоритм добавления нового элемента в LinkedList
При добавлении нового элемента внутренние ссылки элемента меняются.
После добавления первого элемента его ссылка на предыдущий элемент равна `null` (так как перед ним ничего нет), 
точно так же как и ссылка на следующий - `null`.
После добавления второго элемента ссылка первого элемента на следующий элемент меняется 
и начинает указывать на элемент 2. 
При этом внутри второго элемента будут лежать ссылки на предыдущий - элемент 1 и на следующий - `null` (так как в данный момент он является последним элементом списка).
При очередном добавлении нового элемента ссылки будут меняться аналогичным образом.

3. Какие новые методы для LinkedList вы узнали?
Для добавления элементов в начало используется метод addFirst(), а в конец - addLast().
Методы peekFirst() и peekLast() возвращают первый/последний элемент списка и null, если список пуст.
Методы pollFirst() и pollLast() возвращают первый/последний элемент списка и удаляют его из списка. Возвращают null, если список пуст.

4. В каких случаях использование LinkedList эффективнее, чем ArrayList?
Если нужно вставлять (или удалять) в середину коллекции много элементов, 
то лучше использовать LinkedList. Во всех остальных случаях – ArrayList.

5. Какие способы инициализации массива вы знаете?
 - можно обратится к каждому элементу массива по его названию и индексу элемента в квадратных скобках, 
а затем присвоить ему значение строки.
String[] flowers  = new String[3];
flowers[0] = "Роза";
flowers[1] = "Тюльпан";
flowers[2] = "Ромашка";
 - можно совместить с объявлением:
String[] flowers  = new String[] {"Роза", "Тюльпан", "Ромашка"};
 - также можно опустить оператор new: String[] flowers  = {"Роза", "Тюльпан", "Ромашка"};

6. Что такое HashMap?
HashMap - это структура, данные в которой хранятся в формате ключ-значение, то есть по парам. 
При этом в качестве ключа и значения могут выступать любые типы данных из ссылочных.

7. Что будет, если добавить повторяющийся ключ в HashMap?
Предыдущее значение затирается и изменяется на новое. 

8. При помощи какого интерфейса и метода создается цикл foreach в HashMap?
При помощи интерфейса Map.Entry:

for (Map.Entry<Integer,String> element : tabNumAndNames1.entrySet()){
            System.out.println(element);
        }

Интерфейс `Map.Entry` обозначает пару “ключ-значение” внутри карты. То есть один элемент нашей карты: ключ и соответствующее ему значение.

Метод `entrySet()`, который мы вызвали для карты, возвращает список всех пар в нашей `HashMap`. 
Поскольку наша мапа состоит как раз из таких пар-`Entry`, то в цикле `foreach` мы перебираем именно пары, а не отдельно ключи или значения.